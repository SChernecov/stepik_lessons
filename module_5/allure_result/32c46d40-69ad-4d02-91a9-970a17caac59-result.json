{"name": "test_guest_can_add_product_to_basket[offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: The title of the book does not match the one added", "trace": "self = <module_5.test_product_page.TestProductPage object at 0x000001DF55D37190>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc4311fa480b254bbd60937a44a9e21a\")>, promo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail), \"offer8\",\n                              \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        # Arrange\n        link = f\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo={promo_offer}\"\n        page = ProductPage(browser, link)\n        page.open()\n        product_name = page.get_product_name()\n        product_price = page.get_product_price()\n    \n        # Act\n        page.click_add_to_basket_button()\n        page.solve_quiz_and_get_code()\n    \n        # Assert\n>       page.should_be_product_adding(name=product_name, price=product_price)\n\nmodule_5\\test_product_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodule_5\\pages\\product_page.py:31: in should_be_product_adding\n    self.should_be_correct_product_adding(name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x000001DF55D551C0>, product_name = 'Coders at Work'\n\n    def should_be_correct_product_adding(self, product_name):\n        product_name_in_message = self.get_element_text(*ProductPageLocators.PRODUCT_NAME_IN_MESSAGE_LOCATOR)\n>       assert product_name == product_name_in_message, \"The title of the book does not match the one added\"\nE       AssertionError: The title of the book does not match the one added\n\nmodule_5\\pages\\product_page.py:24: AssertionError"}, "attachments": [{"name": "stdout", "source": "f225efef-baaf-4b84-a629-3d795820b51d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "promo_offer", "value": "'offer7'"}], "start": 1616016118700, "stop": 1616016121980, "uuid": "cc88b049-5420-4a89-b4b4-174b2e11f451", "historyId": "8433857a769ecd2ca3eba03399b040cb", "testCaseId": "0dfdfd1797a0034073e745572a047fc5", "fullName": "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "module_5"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "WIN-A91CKCFULIL"}, {"name": "thread", "value": "17704-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "module_5.test_product_page"}]}